name: .NET CI

env:
  registryName: buweftwhs46jympnpreg.azurecr.io
  repositoryName: techexcel/dotnetcoreapp
  dockerFolderPath: ./src/Application/src/RazorPagesTestSample
  tag: ${{github.run_number}}

on:
  push:
    branches: [main]
    paths: src/Application/**
  pull_request:
    branches: [main]
    paths: src/Application/**
  # Allows you to run this workflow manually from the Actions tab
  workflow_dispatch:
jobs:
  build:
    runs-on: ubuntu-latest

    steps:
      - uses: actions/checkout@v3
      - name: Setup .NET
        uses: actions/setup-dotnet@v3
        with:
          dotnet-version: 8.0

      - name: Restore dependencies
        run: dotnet restore ./src/Application/src/RazorPagesTestSample/RazorPagesTestSample.csproj
      - name: Build
        run: dotnet build --no-restore ./src/Application/src/RazorPagesTestSample/RazorPagesTestSample.csproj
      - name: Test
        run: dotnet test --no-build --verbosity normal ./src/Application/tests/RazorPagesTestSample.Tests/RazorPagesTestSample.Tests.csproj

  dockerBuildPush:
    runs-on: ubuntu-latest
    needs: build
    outputs:
      image: ${{ env.IMAGE_DEFAULT_TAG }}
    env:
      IMAGE_DEFAULT_TAG:
    steps:
      - uses: actions/checkout@v4

      - name: "Az CLI login"
        uses: azure/login@v2
        with:
          client-id: ${{ secrets.AZURE_CLIENT_ID }}
          tenant-id: ${{ secrets.AZURE_TENANT_ID }}
          subscription-id: ${{ secrets.AZURE_SUBSCRIPTION_ID }}

      - name: "Run az commands"
        run: |
          az account show
          az group list

      - name: Azure Container Registry Login
        run: az acr login --name ${{ env.registryName }}

      # - name: Docker Login
      #   # You may pin to the exact commit or the version.
      #   # uses: docker/login-action@28218f9b04b4f3f62068d7b6ce6ca5b26e35336c
      #   uses: docker/login-action@v1.9.0
      #   with:
      #     # Server address of Docker registry. If not set then will default to Docker Hub
      #     registry: ${{ secrets.ACR_LOGIN_SERVER }}
      #     # Username used to log against the Docker registry
      #     username: ${{ secrets.ACR_USERNAME }}
      #     # Password or personal access token used to log against the Docker registry
      #     password: ${{ secrets.ACR_PASSWORD }}
      #     # Log out from the Docker registry at the end of a job
      #     logout: true

      # - name: Docker Build
      #   run: docker build -t $registryName/$repositoryName:$tag --build-arg build_version=$tag $dockerFolderPath

      # - name: Docker Push
      #   run: docker push $registryName/$repositoryName:$tag

      - name: Docker meta
        id: docker-meta
        uses: docker/metadata-action@v5
        with:
          images: ${{ env.registryName }}/${{ env.repositoryName }}
          tags: |
            type=sha,priority=1000
            type=ref,event=branch,priority=900

      - name: Build and push
        id: build-and-push
        uses: docker/build-push-action@v6
        with:
          context: .
          push: ${{ github.event_name != 'pull_request' }}
          tags: |
            ${{ steps.docker-meta.outputs.tags }}
          labels: ${{ steps.docker-meta.outputs.labels }}

      - name: Set Default Image Tag
        run: echo "IMAGE_DEFAULT_TAG=${{ fromJSON(steps.docker-meta.outputs.json).tags[0] }}" >> $GITHUB_ENV

  deploy-to-dev:
    runs-on: ubuntu-latest
    needs: dockerBuildPush
    environment:
      name: dev

    steps:
      - name: "Az CLI login"
        uses: azure/login@v2
        with:
          client-id: ${{ secrets.AZURE_CLIENT_ID }}
          tenant-id: ${{ secrets.AZURE_TENANT_ID }}
          subscription-id: ${{ secrets.AZURE_SUBSCRIPTION_ID }}

      - name: Deploy to Azure App Service
        uses: azure/webapps-deploy@v3
        with:
          app-name: ${{ vars.APP_SERVICE_NAME }}
          images: ${{ needs.dockerBuildPush.outputs.image }}
